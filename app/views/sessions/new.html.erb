<div id="okta"></div>
<script>
console.log("test")
var signIn = new OktaSignIn({
  baseUrl: "https://vanbeektech.okta.com",
  logo: "https://www.atomix.com.au/media/2015/06/atomix_user31.png",
  clientId: "your cid",
  redirectUri: 'http://localhost:3000/authorization-code/callback',
  authParams: {
    // display: 'page',
    responseType: 'token',
    scopes: ['openid', 'email', 'profile', 'address', 'phone', 'groups', 'offline_access']
  }
});




//replace values of baseurl, client id , and whatever redirect uri you use

var authClient = new OktaAuth({
  url: "https://vanbeektech.okta.com",
  clientId: "0oa4ue0pj72ibdtB91t7",
  redirectUri: 'http://localhost:3000/authorization-code/callback'
});



signIn.session.get(function (res) {
  // Session exists, show logged in state.
  if (res.status === 'ACTIVE') {
    console.log(authClient.tokenManager.get('my_access_token'))
    console.log("yeah")
    var token
    signIn.hide()
    $("#logout").show()
  }
  // No session, or error retrieving the session. Render the Sign-In Widget.
  else if (res.status === 'INACTIVE') {
      $("#logout").hide()
  }
});


function IdPAuth() {
  var options = {
    scopes: ['openid', 'email', 'profile'],
    responseType: 'token',
    idp: "0oa38fseusRyzxVKf1t7",
    redirectUri: 'http://localhost:3000/authorization-code/callback'
  };
  var token = authClient.token.getWithRedirect(options).
  authClient.tokenManager.add('my_access_token', res);
  authClient.tokenManager.add('my_access_token', response);

}


function tokenGraber(signIn, authClient){
   this.signIn = signIn
   this.authClient = authClient
   this.token = function() {
     if(this.signIn.tokenManager.get('my_access_token') != null){
       return this.signIn.tokenManager.get('my_access_token')
     } else {
       this.authClient.token.parseFromUrl()
       .then(function(tokenOrTokens) {
          return tokenOrTokens
        })
          .catch(function(err) {
            // handle OAuthError
      });
     }
   }
   this.claims = function(){
     if(this.token() != null){
       return authClient.token.decode(this.token().accessToken)
     }
   }
   this.tokenUser = function(){
     if(this.claims() != null){
       return this.claims().payload.comic
     }
   }


};










signIn.renderEl(
  // Assumes there is an empty element on the page with an id of 'osw-container'
  {el: '#okta'},

  function success(res) {
    console.log(res)
    if (res.status === 'SUCCESS') {
      if (res.type === 'SESSION_STEP_UP') {
        return;
      } else {
      }
      console.log(res.accessToken)
      authClient.tokenManager.add('my_access_token', res)
      console.log(res)



      authClient.token.getUserInfo(res)
      .then(function(user) {
        console.log(user)
        var data = {okta_id: user.sub, first_name: user.given_name, last_name: user.family_name, email: user.email}
        $.ajax({
          url: '/oktaSign',
          type: 'POST',
          data: data,
          dataType: 'json'
        }) .always(function(data) {
          console.log(data)
          window.location.href = "http://localhost:3000"
        });
    });





      return;
    }

  },
  function error(err) {
  }
);


</script>
